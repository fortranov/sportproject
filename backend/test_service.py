#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Triathlon Training Service
"""

import requests
import json
from datetime import date, timedelta

BASE_URL = "http://localhost:8000"

def test_service():
    print("üèä‚Äç‚ôÇÔ∏èüö¥‚Äç‚ôÇÔ∏èüèÉ‚Äç‚ôÇÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Triathlon Training Service")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_user = "test_user_123"
    competition_date = (date.today() + timedelta(days=90)).isoformat()  # –°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 3 –º–µ—Å—è—Ü–∞
    difficulty = 500  # –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å
    
    print(f"üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"  UIN: {test_user}")
    print(f"  –î–∞—Ç–∞ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è: {competition_date}")
    print(f"  –°–ª–æ–∂–Ω–æ—Å—Ç—å: {difficulty}")
    print()
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    print("üîµ –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫")
    try:
        response = requests.post(f"{BASE_URL}/training-plan", json={
            "uin": test_user,
            "competition_date": competition_date,
            "difficulty": difficulty
        })
        
        if response.status_code == 200:
            plan = response.json()
            print(f"‚úÖ –ü–ª–∞–Ω —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"  ID –ø–ª–∞–Ω–∞: {plan['id']}")
            print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –¥–Ω–µ–π: {len(plan['training_days'])}")
            
            # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ 5 –¥–Ω–µ–π
            print(f"  –ü–µ—Ä–≤—ã–µ 5 –¥–Ω–µ–π:")
            for day in plan['training_days'][:5]:
                print(f"    {day['date']}: –ü–ª–∞–≤–∞–Ω–∏–µ {day['swimming_hours']}—á, –í–µ–ª–æ—Å–∏–ø–µ–¥ {day['cycling_hours']}—á, –ë–µ–≥ {day['running_hours']}—á (–í—Å–µ–≥–æ: {day['total_hours']}—á)")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∞: {response.status_code}")
            print(response.text)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    print("üîµ –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫")
    try:
        response = requests.get(f"{BASE_URL}/training-plan/{test_user}")
        
        if response.status_code == 200:
            plan = response.json()
            print(f"‚úÖ –ü–ª–∞–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤–∏–¥–∞–º —Å–ø–æ—Ä—Ç–∞
            total_swimming = sum(day['swimming_hours'] for day in plan['training_days'])
            total_cycling = sum(day['cycling_hours'] for day in plan['training_days'])
            total_running = sum(day['running_hours'] for day in plan['training_days'])
            total_hours = sum(day['total_hours'] for day in plan['training_days'])
            
            print(f"  üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞–Ω–∞:")
            print(f"    –û–±—â–µ–µ –≤—Ä–µ–º—è: {total_hours:.1f} —á–∞—Å–æ–≤")
            print(f"    –ü–ª–∞–≤–∞–Ω–∏–µ: {total_swimming:.1f}—á ({total_swimming/total_hours*100:.1f}%)")
            print(f"    –í–µ–ª–æ—Å–∏–ø–µ–¥: {total_cycling:.1f}—á ({total_cycling/total_hours*100:.1f}%)")
            print(f"    –ë–µ–≥: {total_running:.1f}—á ({total_running/total_hours*100:.1f}%)")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞–Ω–∞: {response.status_code}")
            print(response.text)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ (–ø–æ–≤—Ç–æ—Ä–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ)
    print("üîµ –¢–µ—Å—Ç 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫")
    try:
        new_difficulty = 750  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å
        response = requests.post(f"{BASE_URL}/training-plan", json={
            "uin": test_user,
            "competition_date": competition_date,
            "difficulty": new_difficulty
        })
        
        if response.status_code == 200:
            plan = response.json()
            print(f"‚úÖ –ü–ª–∞–Ω –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"  –ù–æ–≤–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: {new_difficulty}")
            
            # –°—Ä–∞–≤–Ω–∏–º –æ–±—â–µ–µ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
            total_hours = sum(day['total_hours'] for day in plan['training_days'])
            print(f"  –û–±—â–µ–µ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {total_hours:.1f} —á–∞—Å–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞: {response.status_code}")
            print(response.text)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 4: –£–¥–∞–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∞
    print("üîµ –¢–µ—Å—Ç 4: –£–¥–∞–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫")
    try:
        response = requests.delete(f"{BASE_URL}/training-plan/{test_user}")
        
        if response.status_code == 200:
            print("‚úÖ –ü–ª–∞–Ω —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω
            response = requests.get(f"{BASE_URL}/training-plan/{test_user}")
            if response.status_code == 404:
                print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: –ø–ª–∞–Ω –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                print("‚ùå –ü–ª–∞–Ω –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞: {response.status_code}")
            print(response.text)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    print("üîµ –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
    difficulties = [100, 400, 800]  # –ù–∞—á–∏–Ω–∞—é—â–∏–π, —Å—Ä–µ–¥–Ω–∏–π, –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π
    
    for diff in difficulties:
        try:
            response = requests.post(f"{BASE_URL}/training-plan", json={
                "uin": f"test_user_{diff}",
                "competition_date": competition_date,
                "difficulty": diff
            })
            
            if response.status_code == 200:
                plan = response.json()
                total_hours = sum(day['total_hours'] for day in plan['training_days'])
                avg_weekly_hours = total_hours / (len(plan['training_days']) / 7)
                
                level = "–ù–∞—á–∏–Ω–∞—é—â–∏–π" if diff <= 300 else "–°—Ä–µ–¥–Ω–∏–π" if diff <= 700 else "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π"
                print(f"  {level} (—Å–ª–æ–∂–Ω–æ—Å—Ç—å {diff}): {avg_weekly_hours:.1f} —á–∞—Å–æ–≤/–Ω–µ–¥–µ–ª—è")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –¥–ª—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ {diff}: {response.status_code}")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –¥–ª—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ {diff}: {e}")
    
    print()
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
    print("‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
    print()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω
        response = requests.get(f"{BASE_URL}/")
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
            print()
            test_service()
        else:
            print("‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–∏—Å—É: {e}")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –∫–æ–º–∞–Ω–¥–æ–π: python main.py")
